<?hh // strict
namespace google\protobuf;

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source: google/protobuf/any.proto

class Any implements \Protobuf\Message {
  public string $type_url;
  public string $value;

  public function __construct() {
    $this->type_url = '';
    $this->value = '';
  }

  public function MergeFrom(\Protobuf\Internal\Decoder $d): void {
    while (!$d->isEOF()) {
      list($fn, $wt) = $d->readTag();
      switch ($fn) {
        case 1:
          $this->type_url = $d->readString();
          break;
        case 2:
          $this->value = $d->readString();
          break;
        default:
          $d->skipWireType($wt);
      }
    }
  }

  public function WriteTo(\Protobuf\Internal\Encoder $e): void {
    if ($this->type_url !== '') {
      $e->writeTag(1, 2);
      $e->writeString($this->type_url);
    }
    if ($this->value !== '') {
      $e->writeTag(2, 2);
      $e->writeString($this->value);
    }
  }

  public function WriteJsonTo(\Protobuf\Internal\JsonEncoder $e): void {
    $e->writeString('type_url', 'typeUrl', $this->type_url, false);
    $e->writeBytes('value', 'value', $this->value, false);
  }

  public function MergeJsonFrom(mixed $m): void {
    if ($m === null)
      return;
    $d = \Protobuf\Internal\JsonDecoder::readObject($m);
    foreach ($d as $k => $v) {
      switch ($k) {
        case 'type_url':
        case 'typeUrl':
          $this->type_url = \Protobuf\Internal\JsonDecoder::readString($v);
          break;
        case 'value':
          $this->value = \Protobuf\Internal\JsonDecoder::readBytes($v);
          break;
      }
    }
  }
}


class XXX_FileDescriptor_google_protobuf_any__proto
  implements \Protobuf\Internal\FileDescriptor {
  const string NAME = 'google/protobuf/any.proto';
  const string
    RAW =
      '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';
  public function Name(): string {
    return self::NAME;
  }

  public function FileDescriptorProtoBytes(): string {
    return (string)\gzuncompress(\base64_decode(self::RAW));
  }
}
